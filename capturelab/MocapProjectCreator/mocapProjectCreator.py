#----template code auto generated by fUICMaker!----#

#builtins
import sys, os, os.path, time
#3rd
from PyQt4 import QtCore, QtGui
#lib
from ui import mocapProjectCreatorUI as mocapprojectcreator


class DL_mocapProjectCreator(QtGui.QDialog, mocapprojectcreator.Ui_mocapProjectCreator):
    
    cMOCAP_PATH_ROOT = r"C:\Users\pashall\Desktop"
    
    def __init__(self, parent=None):
        super(DL_mocapProjectCreator, self).__init__(parent)
        self.setupUi(self)
         
        
       
  
        #connections
        self.connect(self.create_btn, QtCore.SIGNAL("clicked()"), self.projectCreator)
        self.connect(self.cancel_btn, QtCore.SIGNAL("clicked()"), self.cancelApp)
        
        
    #@QtCore.Slot()
    def projectCreator(self):
        
        if self.projectName_lineEdit.text():
            name = time.strftime("%Y%m%d_") + str(self.projectName_lineEdit.text())
            
      
        elif not self.lineEdit.text():
            print "Error! No project name given."
            
        
        # add mocap    
        if self.mocap_radBtn.isChecked():
            name + "_mocap"
            
            
        # add vcam
        if self.vcam_radBtn.isChecked():
            name + "_vcam"
            
        elif not self.mocap_radBtn.isChecked() or not self.vcam_radBtn.isChecked():
            print "Error! Shoot type not given"
                  
     
     
        joined = os.path.join(DL_mocapProjectCreator.cMOCAP_PATH_ROOT, name)
        print joined
        
        
        if not os.path.exists(joined):
            os.makedirs(joined)
        print 'Path Created'    
    
    def cancelApp(self): 
        exit()
         

    def _main(self):
        self.show()



#------------------------------------------------------------------------------
if __name__ == "__main__":
    app = QtGui.QApplication(sys.argv)
    dl = DL_mocapProjectCreator()
    dl._main()
    app.exec_()